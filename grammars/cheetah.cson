'scopeName': 'source.cheetah'
'name': 'Cheetah'
'fileTypes': ['tmpl']

'patterns': [
  # Line comment
  {
    'match': '##.*$'
    'name': 'comment.line.cheetah'
  }
  # Block comment
  {
    'begin': '#\\*'
    'beginCaptures':
      '1':
        'name': 'punctuation.section.begin.comment.cheetah'
    'end': '\\*#'
    'endCaptures':
      '1':
        'name': 'punctuation.section.end.comment.cheetah'
    'name': 'comment.block.cheetah'
  }
  # one-line if-then-else
  {
    'match': '(#if) +(.*?) (then) +(.*?) (else) +(.*?)(?:(#)|$)'
    'captures':
      '1':
        'name': 'keyword.control.cheetah'
      '2':
        'patterns': [
          { 'include': '$self' }
        ]
      '3':
        'name': 'keyword.control.cheetah'
      '4':
        'patterns': [
          { 'include': '$self' }
        ]
      '5':
        'name': 'keyword.control.cheetah'
      '6':
        'patterns': [
          { 'include': '$self' }
        ]
      '7':
        'name': 'keyword.control.cheetah'
  }
  # import, from
  {
    'match': '(#)((?:import|from) ?.*?)(?:(#)|$)'
    'captures':
      '1':
        'name': 'keyword.control.cheetah'
      '2':
        'patterns': [
          { 'include': 'source.python' }
        ]
      '3':
        'name': 'keyword.control.cheetah'
  }
  # echo, silent, and py for Yelp :P
  {
    'match': '(#(?:echo|silent|py)) ?(.*?)(?:(#)|$)'
    'captures':
      '1':
        'name': 'keyword.control.cheetah'
      '2':
        'patterns': [
          { 'include': 'source.python' }
        ]
      '3':
        'name': 'keyword.control.cheetah'
  }
  # doesn't have end ___
  {
    'match': '(#(?:include|slurp|indent|filter|extends|implements|set|del|attr|else if|else|break|continue|pass|stop|return|except|finally|assert|errorCatcher|breakpoint)) ?(.*?)(?:(#)|$)'
    'captures':
      '1':
        'name': 'keyword.control.cheetah'
      '2':
        'patterns': [
          { 'include': '$self' }
        ]
      '3':
        'name': 'keyword.control.cheetah'
  }
  # has end ___
  {
    'match': '(#(?:end )?(?:cache|raw|block|for|repeat|while|if|unless|try|compiler-settings)) ?(.*?)(?:(#)|$)'
    'captures':
      '1':
        'name': 'keyword.control.cheetah'
      '2':
        'patterns': [
          { 'include': '$self' }
        ]
      '3':
        'name': 'keyword.control.cheetah'
  }
  # $var, $*var2
  {
    'match': '(\\$(?:\\*)?)([a-zA-Z_][\\.\\w]*?)(?:\\s|(<.*))'
    'captures':
      '1':
        'name': 'entity.name.function.cheetah'
      '2':
        'patterns': [
          { 'include': '$self' }
        ]
      '3':
        'patterns': [
          { 'include': '$self' }
        ]
  }
  # ${var}, $*{var2}
  {
    'match': '(\\$(?:\\*)?{)([a-zA-Z_][\\.\\w]*?)(})'
    'captures':
      '1':
        'name': 'entity.name.function.cheetah'
      '2':
        'patterns': [
          { 'include': '$self' }
        ]
      '3':
        'name': 'entity.name.function.cheetah'
  }
  # $*5*var3
  {
    'match': '(\\$\\*)((?:(?:[0-9]+\\.?[0-9]*)|(?:\\.[0-9]+))[smhdw]?)(\\*)([a-zA-Z_][\\.\\w]*?)(?:\\s|(<.*))'
    'captures':
      '1':
        'name': 'entity.name.function.cheetah'
      '2':
        'name': 'constant.numeric.cheetah'
      '3':
        'name': 'entity.name.function.cheetah'
      '4':
        'patterns': [
          { 'include': '$self' }
        ]
      '5':
        'patterns': [
          { 'include': '$self' }
        ]
  }
  # $*5*{var3}
  {
    'match': '(\\$\\*)((?:(?:[0-9]+\\.?[0-9]*)|(?:\\.[0-9]+))[smhdw]?)(\\*{)([a-zA-Z_][\\.\\w]*?)(})'
    'captures':
      '1':
        'name': 'entity.name.function.cheetah'
      '2':
        'name': 'constant.numeric.cheetah'
      '3':
        'name': 'entity.name.function.cheetah'
      '4':
        'patterns': [
          { 'include': '$self' }
        ]
      '5':
        'name': 'entity.name.function.cheetah'
  }
  # everything else, probably HTML
  { 'include': 'text.html.basic' }
]
